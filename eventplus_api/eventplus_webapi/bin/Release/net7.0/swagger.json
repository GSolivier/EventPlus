{
  "swagger": "2.0",
  "info": {
    "title": "API EventPlus",
    "description": "Uma WEB API para o gerenciamento do site de eventos EventPlus",
    "contact": {
      "name": "Guilherme Sousa Oliveira",
      "url": "https://github.com/GSolivier"
    },
    "version": "v1"
  },
  "paths": {
    "/api/ComentarioEvento": {
      "post": {
        "tags": [
          "ComentarioEvento"
        ],
        "summary": "Endpoint que acessa o método cadastrar do ComentarioEventoRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto com os atributos a serem cadastrados",
            "schema": {
              "$ref": "#/definitions/ComentarioEvento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "ComentarioEvento"
        ],
        "summary": "Endpoint que acessa o método ListarTodos do ComentarioEventoRepository",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ComentarioEvento/Evento/{idEvento}": {
      "get": {
        "tags": [
          "ComentarioEvento"
        ],
        "summary": "Endpoint que acessa o método Listar do ComentarioEventoRepository",
        "parameters": [
          {
            "in": "path",
            "name": "idEvento",
            "description": "ID do evento que terá seus comentários listados",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ComentarioEvento/Usuario": {
      "get": {
        "tags": [
          "ComentarioEvento"
        ],
        "summary": "Endpoint que acessa o método ListarPorUsuario do repositório ComentarioEventoRepository",
        "parameters": [
          {
            "in": "query",
            "name": "idUsuario",
            "description": "ID do usuário que terá seus comentários listados",
            "type": "string",
            "format": "uuid",
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "idEvento",
            "type": "string",
            "format": "uuid",
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ComentarioEvento/ListarSomenteExibe/{idEvento}": {
      "get": {
        "tags": [
          "ComentarioEvento"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "idEvento",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ComentarioEvento/{id}": {
      "get": {
        "tags": [
          "ComentarioEvento"
        ],
        "summary": "Endpoint que acessa o método BuscarPorId do ComentarioEventoRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do comentário que será buscado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ComentarioEvento"
        ],
        "summary": "Endpoint que acessa o método Deletar do COmentarioEventoRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do comentário que será deletado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ComentarioEvento/ComentarioIA": {
      "post": {
        "tags": [
          "ComentarioEvento"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ComentarioEvento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Evento": {
      "post": {
        "tags": [
          "Evento"
        ],
        "summary": "Endpoint que acessa o método Cadastrar na EventoRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto com os atributos a serem cadastrados",
            "schema": {
              "$ref": "#/definitions/Evento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Evento"
        ],
        "summary": "Endpoint que acessa o método Listar na EventoRepository",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Evento/ListarProximos": {
      "get": {
        "tags": [
          "Evento"
        ],
        "summary": "Endpoint que acessa o método ListarProximos do EventoRepository",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Evento/{id}": {
      "put": {
        "tags": [
          "Evento"
        ],
        "summary": "Endpoint que acessa o método Atualizar na EventoRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do objeto que será atualizado",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "corpo do objeto com as novas informações",
            "schema": {
              "$ref": "#/definitions/Evento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Evento"
        ],
        "summary": "Endpoint que acessa o método Deletar do Repository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário que será deletado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Evento"
        ],
        "summary": "Endpoint que acessa o método BuscarPorId do eventoRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do objeto que será buscado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Instituicao": {
      "post": {
        "tags": [
          "Instituicao"
        ],
        "summary": "Endpoint que acessa o método Cadastrar no InstituicaoRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto com os novos valores a serem cadastrados",
            "schema": {
              "$ref": "#/definitions/Instituicao"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Método para realizar o login de um usuário utilizando o método BuscarPorEmailESenha no UsuarioRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto da LoginViewModel para realizar o login do usuário",
            "schema": {
              "$ref": "#/definitions/LoginViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PresencasEvento": {
      "post": {
        "tags": [
          "PresencasEvento"
        ],
        "summary": "Endpoint que acessa o método cadastrar no PresencasEventoRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "objeto que contem as informações que serão cadastradas",
            "schema": {
              "$ref": "#/definitions/PresencasEvento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "PresencasEvento"
        ],
        "summary": "Endpoint que acessa o método Listar no PresencasEventoRepository",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PresencasEvento/{id}": {
      "get": {
        "tags": [
          "PresencasEvento"
        ],
        "summary": "Endpoint que acessa o método ListarPresencasUser do PresencasEventoRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário que terá as suas presenças listadas",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "PresencasEvento"
        ],
        "summary": "Endpoint que acessa o método Atualizar do PresencaEventoRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID da presença que será atualizada",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Objeto com os novos valores",
            "schema": {
              "$ref": "#/definitions/PresencasEvento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "PresencasEvento"
        ],
        "summary": "Endpoint que acessa o método Deletar da PresencaEventoRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID da prensença que será deletada",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/PresencasEvento/BuscarPorId/{id}": {
      "get": {
        "tags": [
          "PresencasEvento"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TiposEvento": {
      "post": {
        "tags": [
          "TiposEvento"
        ],
        "summary": "Endpoint para realizar um cadastro de um novo tipo de evento a partir do repository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "o objeto com os novos atributos a serem passados pelo usuário",
            "schema": {
              "$ref": "#/definitions/TiposEvento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "TiposEvento"
        ],
        "summary": "Endpoint que acessa o método de Listar na TiposEventoRepository",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TiposEvento/{id}": {
      "put": {
        "tags": [
          "TiposEvento"
        ],
        "summary": "Endpoint que aciona o método Atualizar na tipoEventoRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do objeto que será atualizado",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "corpo do objeto com as novas informações",
            "schema": {
              "$ref": "#/definitions/TiposEvento"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "TiposEvento"
        ],
        "summary": "Endpoint que acessa o método Deletar do TipoEventoRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do tipo de evento que será deletado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "TiposEvento"
        ],
        "summary": "Endpoint que acessa o método BuscarPorId no tiposEventoRepoistory",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do objeto que será buscado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TiposUsuario": {
      "post": {
        "tags": [
          "TiposUsuario"
        ],
        "summary": "Endpoint que acessa o tipoUsuarioRepository para realizar um novo cadastro",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto com os valores a serem cadastrados",
            "schema": {
              "$ref": "#/definitions/TiposUsuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "TiposUsuario"
        ],
        "summary": "Endpoint que acessa o método Listar do tipoUsuarioRepository",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/TiposUsuario/{id}": {
      "put": {
        "tags": [
          "TiposUsuario"
        ],
        "summary": "Endpoint que acessa o método Atualizar do tipoUsuarioRepository",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário que será atualizado",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Objeto com os novos atributos a serem atualizados",
            "schema": {
              "$ref": "#/definitions/TiposUsuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "TiposUsuario"
        ],
        "summary": "Endpoint que acessa o método Deletar do TipoUsuarioRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário que será deletado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "TiposUsuario"
        ],
        "summary": "Endpoint que aciona o método BuscarPorId no TipoUsuarioRepository",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário que será buscado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Usuario/{id}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Endpoint para buscar um usuário pelo seu ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID do usuário que será buscado",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Usuario": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Endpoint para cadastrar um novo usuário",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objeto com os atributos que serão cadastrados",
            "schema": {
              "$ref": "#/definitions/Usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "definitions": {
    "ComentarioEvento": {
      "description": "Domain que representa a entidade ComentarioEvento",
      "required": [
        "descricao",
        "exibe",
        "idEvento",
        "idUsuario"
      ],
      "type": "object",
      "properties": {
        "idComentarioEvento": {
          "format": "uuid",
          "type": "string"
        },
        "descricao": {
          "minLength": 1,
          "type": "string"
        },
        "exibe": {
          "type": "boolean"
        },
        "idUsuario": {
          "format": "uuid",
          "type": "string"
        },
        "usuario": {
          "$ref": "#/definitions/Usuario"
        },
        "idEvento": {
          "format": "uuid",
          "type": "string"
        },
        "evento": {
          "$ref": "#/definitions/Evento"
        }
      },
      "additionalProperties": false
    },
    "Evento": {
      "description": "Domain que representa a entidade Evento",
      "required": [
        "dataEvento",
        "descricao",
        "idInstituicao",
        "idTipoEvento",
        "nome"
      ],
      "type": "object",
      "properties": {
        "idEvento": {
          "format": "uuid",
          "type": "string"
        },
        "dataEvento": {
          "format": "date-time",
          "type": "string"
        },
        "nome": {
          "minLength": 1,
          "type": "string"
        },
        "descricao": {
          "minLength": 1,
          "type": "string"
        },
        "idTipoEvento": {
          "format": "uuid",
          "type": "string"
        },
        "tiposEvento": {
          "$ref": "#/definitions/TiposEvento"
        },
        "idInstituicao": {
          "format": "uuid",
          "type": "string"
        },
        "instituicao": {
          "$ref": "#/definitions/Instituicao"
        }
      },
      "additionalProperties": false
    },
    "Instituicao": {
      "description": "Domain que representa a entidade Instituicao",
      "required": [
        "cnpj",
        "endereco",
        "nomeFantasia"
      ],
      "type": "object",
      "properties": {
        "idInstituicao": {
          "format": "uuid",
          "type": "string"
        },
        "cnpj": {
          "maxLength": 14,
          "minLength": 0,
          "type": "string"
        },
        "endereco": {
          "minLength": 1,
          "type": "string"
        },
        "nomeFantasia": {
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LoginViewModel": {
      "required": [
        "email",
        "senha"
      ],
      "type": "object",
      "properties": {
        "email": {
          "minLength": 1,
          "type": "string"
        },
        "senha": {
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PresencasEvento": {
      "description": "Domain que representa a entidade PresencasEvento",
      "required": [
        "idEvento",
        "idUsuario",
        "situacao"
      ],
      "type": "object",
      "properties": {
        "idPresencaEvento": {
          "format": "uuid",
          "type": "string"
        },
        "situacao": {
          "type": "boolean"
        },
        "idUsuario": {
          "format": "uuid",
          "type": "string"
        },
        "usuario": {
          "$ref": "#/definitions/Usuario"
        },
        "idEvento": {
          "format": "uuid",
          "type": "string"
        },
        "evento": {
          "$ref": "#/definitions/Evento"
        }
      },
      "additionalProperties": false
    },
    "TiposEvento": {
      "description": "Domain que representa a entidade TiposEvento",
      "required": [
        "titulo"
      ],
      "type": "object",
      "properties": {
        "idTipoEvento": {
          "format": "uuid",
          "type": "string"
        },
        "titulo": {
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TiposUsuario": {
      "description": "Domain que representa a entidade TiposUsuario",
      "required": [
        "titulo"
      ],
      "type": "object",
      "properties": {
        "idTipoUsuario": {
          "format": "uuid",
          "type": "string"
        },
        "titulo": {
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Usuario": {
      "description": "Domain que representa a entidade Usuario",
      "required": [
        "email",
        "idTipoUsuario",
        "nome",
        "senha"
      ],
      "type": "object",
      "properties": {
        "idUsuario": {
          "format": "uuid",
          "type": "string"
        },
        "nome": {
          "minLength": 1,
          "type": "string"
        },
        "email": {
          "minLength": 1,
          "type": "string"
        },
        "senha": {
          "maxLength": 60,
          "minLength": 6,
          "type": "string"
        },
        "idTipoUsuario": {
          "format": "uuid",
          "type": "string"
        },
        "tiposUsuario": {
          "$ref": "#/definitions/TiposUsuario"
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Value: Bearer TokenJWT "
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}